{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GiftGridItem.js","components/GiftGrid.js","hooks/useFetchGifs.js","GiftExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","state","type","value","onChange","target","placeholder","getGifs","category","a","query","encodeURI","url","fetch","resp","json","data","gifs","map","gif","id","title","images","downsized_medium","GiftGridItem","className","src","alt","GiftGrid","loading","setState","useEffect","then","imgs","setTimeout","useFetchGifs","key","GiftExpertApp","defaultState","initialState","categories","ReactDOM","render","document","getElementById"],"mappings":"yOAGaA,EAAc,SAAC,GAAyB,IAAtBC,EAAqB,EAArBA,cAAqB,EAGbC,mBADjB,IAF8B,mBAG3CC,EAH2C,KAG/BC,EAH+B,KAmBnD,OACC,0BAAMC,SAVc,SAAEC,GACtBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC/BR,GAAe,SAAAS,GAAK,OAAMP,GAAN,mBAAqBO,OACzCN,EAbmB,OAmBnB,2BACCO,KAAK,OACLC,MAAQT,EACRU,SAnBuB,SAAEP,GAE3BF,EAAeE,EAAEQ,OAAOF,QAkBtBG,YAAY,U,8BC3BHC,EAAO,uCAAG,WAAQC,GAAR,yBAAAC,EAAA,4DACR,mCACRC,EAAQC,UAAWH,GACX,GACRI,EAJgB,iDAIkCF,EAJlC,kBAGR,GAHQ,oBACR,oCADQ,SAMHG,MAAOD,GANJ,cAMhBE,EANgB,gBAOCA,EAAKC,OAPN,uBAOdC,EAPc,EAOdA,KACFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAE7B,MAAO,CACNC,GAAKD,EAAIC,GACTC,MAAOF,EAAIE,MACXT,IAAG,UAAEO,EAAIG,cAAN,aAAE,EAAYC,iBAAiBX,QAbd,kBAiBfK,GAjBe,4CAAH,sDCEPO,EAAe,SAAC,GAAsB,IAAnBH,EAAkB,EAAlBA,MAAOT,EAAW,EAAXA,IAEtC,OACC,yBAAKa,UAAU,4DACd,yBAAKC,IAAMd,EAAMe,IAAMN,IACvB,2BAAKA,KCHKO,EAAW,SAAC,GAAoB,IAAjBpB,EAAgB,EAAhBA,SAAgB,ECFhB,SAAEA,GAAc,MAEff,mBAAS,CACpCuB,KAAM,GACNa,SAAS,IAJiC,mBAEnC5B,EAFmC,KAE5B6B,EAF4B,KAmB3C,OAZAC,qBAAW,WACVxB,EAASC,GACPwB,MAAM,SAAAC,GACNC,YAAY,WACXJ,EAAS,CACRd,KAAMiB,EACNJ,SAAS,MAER,UAEH,CAAErB,IAEEP,EDf0BkC,CAAc3B,GAAlCc,EAF8B,EAEnCN,KAAaa,EAFsB,EAEtBA,QAErB,OACC,oCACC,wBAAIJ,UAAU,qCAAsCjB,GAClDqB,GAAW,uBAAGJ,UAAU,4CAAb,YACb,yBAAKA,UAAU,aACZH,EAAOJ,KAAK,SAACC,GAAD,OAAS,kBAAC,EAAD,eAAciB,IAAMjB,EAAIC,IAAUD,UEVhDkB,EAAgB,SAAC,GAA2B,IAAD,IAAvBC,oBAAuB,MAAV,GAAU,EAEjDC,EAAiBD,EAAatC,OAAWsC,EAAe,CAAE,aAFT,EAGjB7C,mBAAU8C,GAHO,mBAG/CC,EAH+C,KAGnChD,EAHmC,KAKvD,OACC,oCACC,6CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BACEgD,EAAWtB,KAAK,SAAAV,GAAQ,OAAI,kBAAC,EAAD,CAAU4B,IAAM5B,EAAWA,SAAWA,S,MCTvEiC,IAASC,OACR,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.491599d2.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\n//\trafcp\r\nexport const AddCategory = ( { setCategories } ) => {\r\n\t//\r\n\tconst initialState = \"\";\r\n\tconst [ inputValue, setInputValue ] = useState( initialState );\r\n\t//\r\n\tconst handleInputChange = ( e ) => {\r\n\t\t//\tconsole.log( 'handleInputChange', e.target.value );\r\n\t\tsetInputValue( e.target.value );\r\n\t}\r\n\t//\r\n\tconst handleSubmit = ( e ) => {\r\n\t\te.preventDefault( );\r\n\t\t//\tconsole.log( 'handleSubmit', inputValue );\r\n\t\tif ( inputValue.trim().length > 2 ) {\r\n\t\t\tsetCategories( state => [ inputValue, ...state ] );\r\n\t\t\tsetInputValue( initialState );\r\n\t\t}\r\n\t}\r\n\t//\r\n\treturn (\r\n\t\t<form onSubmit={ handleSubmit }>\r\n\t\t\t<input \r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tvalue={ inputValue }\r\n\t\t\t\tonChange={ handleInputChange }\r\n\t\t\t\tplaceholder=\"...\"\r\n\t\t\t/>\r\n\t\t</form>\r\n\t)\r\n}\r\n//\r\nAddCategory.propTypes = {\r\n\tsetCategories: PropTypes.func.isRequired\r\n}","//\r\nexport const getGifs = async ( category ) => {\r\n\tconst apiKey= '3YP951merOtwJxJIggqn5IIHAzVvokZB';\r\n\tconst query = encodeURI( category );\r\n\tconst limit = 10;\r\n\tconst url \t= `https://api.giphy.com/v1/gifs/search?q=${ query }&limit=${ limit }&api_key=${ apiKey }`;\r\n\t//\r\n\tconst resp = await fetch( url );\r\n\tconst { data } = await resp.json( );\r\n\tconst gifs = data.map( gif => {\r\n\t\t//\tconsole.log( gif );\r\n\t\treturn {\r\n\t\t\tid:\t\tgif.id,\r\n\t\t\ttitle:\tgif.title,\r\n\t\t\turl:\tgif.images?.downsized_medium.url\r\n\t\t}\r\n\t});\r\n\t//\tconsole.log( gifs );\r\n\treturn gifs;\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n//\r\nexport const GiftGridItem = ( { title, url } ) => {\r\n\t//\r\n\treturn (\r\n\t\t<div className=\"card animate__animated animate__fadeIn animate__delay-2s\">\r\n\t\t\t<img src={ url } alt={ title } />\r\n\t\t\t<p>{ title }</p>\r\n\t\t</div>\r\n\t)\r\n}\r\n//\r\nGiftGridItem.propTypes = {\r\n    title: PropTypes.string.isRequired,\r\n    url: PropTypes.string.isRequired\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GiftGridItem } from './GiftGridItem';\r\n//\r\nexport const GiftGrid = ( { category } ) => {\r\n\t//\r\n\tconst { data:images, loading } = useFetchGifs( category );\r\n\t//\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\r\n\t\t\t{ loading && <p className=\"loading animate__animated animate__flash\">Cargando</p> }\r\n\t\t\t<div className=\"card-grid\">\r\n\t\t\t\t{ images.map( (gif) => <GiftGridItem key={ gif.id } { ...gif } /> ) }\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n//\r\nGiftGrid.propTypes = {\r\n    category: PropTypes.string.isRequired\r\n}\r\n","import { useState, useEffect } from 'react';\r\nimport { getGifs } from '../helpers/getGifs';\r\n//\r\nexport const useFetchGifs = ( category ) => {\r\n\t//\r\n\tconst [ state, setState ] = useState({\r\n\t\tdata: [],\r\n\t\tloading: true\r\n\t});\r\n\t//\r\n\tuseEffect( ( ) => {\r\n\t\tgetGifs( category )\r\n\t\t\t.then( imgs => {\r\n\t\t\t\tsetTimeout( () => {\r\n\t\t\t\t\tsetState({\r\n\t\t\t\t\t\tdata: imgs,\r\n\t\t\t\t\t\tloading: false\r\n\t\t\t\t\t});\r\n\t\t\t\t}, 2000 );\r\n\t\t\t});\r\n\t}, [ category ] );\r\n\t//\r\n\treturn state;\r\n}","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GiftGrid } from './components/GiftGrid';\r\n//\trafc\r\nexport const GiftExpertApp = ( { defaultState=[] } ) => {\r\n\t//\t\r\n\tconst initialState = ( defaultState.length ) ? defaultState : [ 'One Punch' ];\r\n\tconst [ categories, setCategories ] = useState( initialState );\r\n\t//\r\n\treturn(\r\n\t\t<>\r\n\t\t\t<h1>GiftExpertApp</h1>\r\n\t\t\t<AddCategory setCategories={ setCategories } />\r\n\t\t\t<hr/>\r\n\t\t\t{ categories.map( category => <GiftGrid key={ category } category={ category } /> ) }\r\n\t\t</>\r\n\t)\r\n};\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GiftExpertApp } from './GiftExpertApp';\nimport './index.css';\n//\nReactDOM.render(\n\t<GiftExpertApp />,\n\tdocument.getElementById('root')\n);\n"],"sourceRoot":""}